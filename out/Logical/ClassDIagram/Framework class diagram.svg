<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="432px" preserveAspectRatio="none" style="width:824px;height:432px;" version="1.1" viewBox="0 0 824 432" width="824px" zoomAndPan="magnify"><defs><filter height="300%" id="fr5s1wtihvz0i" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[166baa42313bcb471f08d588ce9dba60]
class TestCase--><rect codeLine="3" fill="#FEFECE" filter="url(#fr5s1wtihvz0i)" height="75.6719" id="TestCase" style="stroke:#A80036;stroke-width:1.5;" width="113" x="337" y="182"/><ellipse cx="365.05" cy="198" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M366.0031,194.6406 L366.0031,201.2969 L367.7219,201.2969 Q368.3313,201.2969 368.5969,201.5313 Q368.8625,201.7656 368.8625,202.1563 Q368.8625,202.5313 368.5969,202.7656 Q368.3313,203 367.7219,203 L362.5813,203 Q361.9719,203 361.7063,202.7656 Q361.4406,202.5313 361.4406,202.1406 Q361.4406,201.7656 361.7063,201.5313 Q361.9719,201.2969 362.5813,201.2969 L364.3,201.2969 L364.3,194.6406 L362.5813,194.6406 Q361.9719,194.6406 361.7063,194.4063 Q361.4406,194.1719 361.4406,193.7813 Q361.4406,193.4063 361.7063,193.1719 Q361.9719,192.9375 362.5813,192.9375 L367.7219,192.9375 Q368.3313,192.9375 368.5969,193.1719 Q368.8625,193.4063 368.8625,193.7813 Q368.8625,194.1719 368.5969,194.4063 Q368.3313,194.6406 367.7219,194.6406 L366.0031,194.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="52" x="381.95" y="202.9102">TestCase</text><line style="stroke:#A80036;stroke-width:1.5;" x1="338" x2="449" y1="214" y2="214"/><line style="stroke:#A80036;stroke-width:1.5;" x1="338" x2="449" y1="222" y2="222"/><polygon fill="#FFFF44" points="348,228,352,232,348,236,344,232" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="357" y="237.4189">Setup() : void</text><polygon fill="#FFFF44" points="348,241.8359,352,245.8359,348,249.8359,344,245.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="357" y="251.2549">Teardown() : void</text><path d="M117.5,190.5 L117.5,249.5547 A0,0 0 0 0 117.5,249.5547 L301.5,249.5547 A0,0 0 0 0 301.5,249.5547 L301.5,224 L336.98,220 L301.5,216 L301.5,200.5 L291.5,190.5 L117.5,190.5 A0,0 0 0 0 117.5,190.5 " fill="#FBFB77" filter="url(#fr5s1wtihvz0i)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M291.5,190.5 L291.5,200.5 L301.5,200.5 L291.5,190.5 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="163" x="123.5" y="208.9951">@Test annotations are used</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="131" x="123.5" y="225.3467">to define test functions</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="124" x="123.5" y="241.6982">within each TestCase</text><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><rect codeLine="13" fill="#FEFECE" filter="url(#fr5s1wtihvz0i)" height="75.6719" id="Assert" style="stroke:#A80036;stroke-width:1.5;" width="254" x="242.5" y="343"/><ellipse cx="348.25" cy="359" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M349.2031,355.6406 L349.2031,362.2969 L350.9219,362.2969 Q351.5313,362.2969 351.7969,362.5313 Q352.0625,362.7656 352.0625,363.1563 Q352.0625,363.5313 351.7969,363.7656 Q351.5313,364 350.9219,364 L345.7813,364 Q345.1719,364 344.9063,363.7656 Q344.6406,363.5313 344.6406,363.1406 Q344.6406,362.7656 344.9063,362.5313 Q345.1719,362.2969 345.7813,362.2969 L347.5,362.2969 L347.5,355.6406 L345.7813,355.6406 Q345.1719,355.6406 344.9063,355.4063 Q344.6406,355.1719 344.6406,354.7813 Q344.6406,354.4063 344.9063,354.1719 Q345.1719,353.9375 345.7813,353.9375 L350.9219,353.9375 Q351.5313,353.9375 351.7969,354.1719 Q352.0625,354.4063 352.0625,354.7813 Q352.0625,355.1719 351.7969,355.4063 Q351.5313,355.6406 350.9219,355.6406 L349.2031,355.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="34" x="368.75" y="363.9102">Assert</text><line style="stroke:#A80036;stroke-width:1.5;" x1="243.5" x2="495.5" y1="375" y2="375"/><line style="stroke:#A80036;stroke-width:1.5;" x1="243.5" x2="495.5" y1="383" y2="383"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="215" x="248.5" y="398.4189">Assert(expected: mixed, actual: mixed): void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="242" x="248.5" y="412.2549">AssertQuery(expected: string, query: string): void</text><path d="M6,346.5 L6,405.5547 A0,0 0 0 0 6,405.5547 L207,405.5547 A0,0 0 0 0 207,405.5547 L207,380.0273 L246.5,407.7539 L207,372.0273 L207,356.5 L197,346.5 L6,346.5 A0,0 0 0 0 6,346.5 " fill="#FBFB77" filter="url(#fr5s1wtihvz0i)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M197,346.5 L197,356.5 L207,356.5 L197,346.5 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="156" x="12" y="364.9951">AssertQuery Takes a value</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="176" x="12" y="381.3467">and a query and compares the</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="179" x="12" y="397.6982">return of the query to the value.</text><!--MD5=[9a6eb73a43428bb8bfa570aa6934766d]
class TestCaller--><rect codeLine="24" fill="#FEFECE" filter="url(#fr5s1wtihvz0i)" height="89.5078" id="TestCaller" style="stroke:#A80036;stroke-width:1.5;" width="386" x="424.5" y="7"/><ellipse cx="584.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M587.5156,18.875 Q587.6719,18.6563 587.8594,18.5469 Q588.0469,18.4375 588.2656,18.4375 Q588.6406,18.4375 588.875,18.7031 Q589.1094,18.9531 589.1094,19.5625 L589.1094,21.0156 Q589.1094,21.625 588.875,21.8906 Q588.6406,22.1563 588.2656,22.1563 Q587.9219,22.1563 587.7188,21.9531 Q587.5156,21.7656 587.4063,21.25 Q587.3594,20.8906 587.1719,20.7031 Q586.8438,20.3281 586.2344,20.1094 Q585.625,19.8906 585,19.8906 Q584.2344,19.8906 583.5938,20.2188 Q582.9688,20.5469 582.4688,21.2969 Q581.9844,22.0469 581.9844,23.0781 L581.9844,24.1719 Q581.9844,25.4063 582.875,26.2344 Q583.7656,27.0469 585.3594,27.0469 Q586.2969,27.0469 586.9531,26.7969 Q587.3438,26.6406 587.7656,26.2031 Q588.0313,25.9375 588.1719,25.8594 Q588.3281,25.7813 588.5313,25.7813 Q588.8594,25.7813 589.1094,26.0469 Q589.375,26.2969 589.375,26.6406 Q589.375,26.9844 589.0313,27.3906 Q588.5313,27.9688 587.7344,28.2969 Q586.6563,28.75 585.3594,28.75 Q583.8438,28.75 582.6406,28.125 Q581.6563,27.625 580.9688,26.5625 Q580.2813,25.4844 580.2813,24.2031 L580.2813,23.0469 Q580.2813,21.7188 580.8906,20.5781 Q581.5156,19.4219 582.6094,18.8125 Q583.7031,18.1875 584.9375,18.1875 Q585.6719,18.1875 586.3125,18.3594 Q586.9688,18.5156 587.5156,18.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="605.25" y="27.9102">TestCaller</text><line style="stroke:#A80036;stroke-width:1.5;" x1="425.5" x2="809.5" y1="39" y2="39"/><line style="stroke:#A80036;stroke-width:1.5;" x1="425.5" x2="809.5" y1="47" y2="47"/><ellipse cx="435.5" cy="58" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="444.5" y="62.4189">Run(argv: string[]) : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="432.5" y="68.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="444.5" y="76.2549">SplitBatches(batchesAmount: int, tests: TestCase[], databasePath: string) :</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="432.5" y="82.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="444.5" y="90.0908">ExecuteBatch() : Future</text><!--MD5=[a30f39702b60de0fb597e95f73829e0e]
class TestBatchManager--><rect codeLine="30" fill="#FEFECE" filter="url(#fr5s1wtihvz0i)" height="89.5078" id="TestBatchManager" style="stroke:#A80036;stroke-width:1.5;" width="178" x="528.5" y="175"/><ellipse cx="562.85" cy="191" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M565.6156,186.875 Q565.7719,186.6563 565.9594,186.5469 Q566.1469,186.4375 566.3656,186.4375 Q566.7406,186.4375 566.975,186.7031 Q567.2094,186.9531 567.2094,187.5625 L567.2094,189.0156 Q567.2094,189.625 566.975,189.8906 Q566.7406,190.1563 566.3656,190.1563 Q566.0219,190.1563 565.8188,189.9531 Q565.6156,189.7656 565.5063,189.25 Q565.4594,188.8906 565.2719,188.7031 Q564.9438,188.3281 564.3344,188.1094 Q563.725,187.8906 563.1,187.8906 Q562.3344,187.8906 561.6938,188.2188 Q561.0688,188.5469 560.5688,189.2969 Q560.0844,190.0469 560.0844,191.0781 L560.0844,192.1719 Q560.0844,193.4063 560.975,194.2344 Q561.8656,195.0469 563.4594,195.0469 Q564.3969,195.0469 565.0531,194.7969 Q565.4438,194.6406 565.8656,194.2031 Q566.1313,193.9375 566.2719,193.8594 Q566.4281,193.7813 566.6313,193.7813 Q566.9594,193.7813 567.2094,194.0469 Q567.475,194.2969 567.475,194.6406 Q567.475,194.9844 567.1313,195.3906 Q566.6313,195.9688 565.8344,196.2969 Q564.7563,196.75 563.4594,196.75 Q561.9438,196.75 560.7406,196.125 Q559.7563,195.625 559.0688,194.5625 Q558.3813,193.4844 558.3813,192.2031 L558.3813,191.0469 Q558.3813,189.7188 558.9906,188.5781 Q559.6156,187.4219 560.7094,186.8125 Q561.8031,186.1875 563.0375,186.1875 Q563.7719,186.1875 564.4125,186.3594 Q565.0688,186.5156 565.6156,186.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="103" x="581.15" y="195.9102">TestBatchManager</text><line style="stroke:#A80036;stroke-width:1.5;" x1="529.5" x2="705.5" y1="207" y2="207"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="536.5" y="215"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="86" x="548.5" y="222.4189">Batch: TestCase[]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="529.5" x2="705.5" y1="228.8359" y2="228.8359"/><ellipse cx="539.5" cy="239.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="548.5" y="244.2549">__construct(Batch: TestCase[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="536.5" y="250.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="548.5" y="258.0908">RunBatch(): void</text><!--MD5=[3b73e7cf013a9bd164933e9d54867c18]
link Assert$$$LEFT to Assert--><!--MD5=[0f1c4fad09e7a161dc58096b93af9f0f]
link TestBatchManager to TestCase--><path codeLine="36" d="M528.33,220 C501.97,220 473.86,220 450.16,220 " fill="none" id="TestBatchManager-TestCase" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="453.24,211.1758,462.2851,214.1147,462.2851,208.2369,453.24,211.1758" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="467.24" y="216.4951">has</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="513.3662" y="216.8439">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="5" x="458.1096" y="234.6158">*</text><!--MD5=[984d09653f9204c925d87618ac869361]
link TestCaller to TestBatchManager--><path codeLine="38" d="M617.5,97.02 C617.5,121.13 617.5,150.73 617.5,174.85 " fill="none" id="TestCaller-TestBatchManager" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="622.5,141.1758,625.4389,132.1307,619.5611,132.1307,622.5,141.1758" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="44" x="631.5" y="141.4951">spawns</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="610.0078" y="118.0304">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="20" x="595.9688" y="164.2711">1..*</text><!--MD5=[cb1c7a4e9f142138664bd5d4d9de5020]
link TestCase to Assert--><path codeLine="40" d="M393.5,258.15 C393.5,283.73 393.5,317.27 393.5,342.84 " fill="none" id="TestCase-Assert" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="382.5,309.1758,385.4389,300.1307,379.5611,300.1307,382.5,309.1758" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="28" x="391.5" y="309.4951">uses</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="385.9422" y="279.0544">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="20" x="375.9938" y="332.1734">1..*</text><!--MD5=[f062a39ac6f039d7d4bdfe407c2031fd]
@startuml Framework class diagram
skinparam Linetype ortho
together {
    interface TestCase {
        # Setup() : void
        # Teardown() : void
    }
    note left
        @Test annotations are used
        to define test functions
        within each TestCase
    end note

    interface Assert {
        {static} Assert(expected: mixed, actual: mixed): void
        {static} AssertQuery(expected: string, query: string): void
    }
    note left of Assert::AssertQuery
        AssertQuery Takes a value 
        and a query and compares the 
        return of the query to the value.
    end note
}

class TestCaller {
    + Run(argv: string[]) : int
    - SplitBatches(batchesAmount: int, tests: TestCase[], databasePath: string) : 
    - ExecuteBatch() : Future
}

class TestBatchManager {
    - Batch: TestCase[]
    + __construct(Batch: TestCase[])
    - RunBatch(): void
}

TestBatchManager "1" - "*" TestCase: has >

TestCaller "1" - - "1..*" TestBatchManager: spawns >

TestCase "1" - - "1..*" Assert: uses >
@enduml

PlantUML version 1.2021.00(Sun Jan 10 11:25:05 CET 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: GB
--></g></svg>